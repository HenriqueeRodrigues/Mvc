// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SecretaryWebMvc.Data;

namespace SecretaryWebMvc.Migrations
{
    [DbContext(typeof(SecretaryWebMvcContext))]
    [Migration("20220221154230_FKAssistance")]
    partial class FKAssistance
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SecretaryWebMvc.Models.ActivitiesReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AssistanceId");

                    b.Property<double?>("BibleStudies");

                    b.Property<DateTime>("Date");

                    b.Property<double?>("Hours");

                    b.Property<bool>("IsPionerAux");

                    b.Property<string>("Observation");

                    b.Property<double?>("PlusHours");

                    b.Property<double?>("Publications");

                    b.Property<int?>("PublisherId");

                    b.Property<bool>("PublisherRelated");

                    b.Property<double?>("Revisits");

                    b.Property<double?>("Video");

                    b.HasKey("Id");

                    b.HasIndex("AssistanceId");

                    b.HasIndex("PublisherId");

                    b.ToTable("ActivitiesReport");
                });

            modelBuilder.Entity("SecretaryWebMvc.Models.Assistance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CongregationId");

                    b.Property<DateTime>("Date");

                    b.Property<int>("Quantity");

                    b.HasKey("Id");

                    b.HasIndex("CongregationId");

                    b.ToTable("Assistance");
                });

            modelBuilder.Entity("SecretaryWebMvc.Models.Congregation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("City");

                    b.Property<string>("Name");

                    b.Property<string>("State");

                    b.Property<int>("SumPublishers");

                    b.HasKey("Id");

                    b.ToTable("Congregation");
                });

            modelBuilder.Entity("SecretaryWebMvc.Models.Publisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("BaptismDate");

                    b.Property<DateTime>("BirthDate");

                    b.Property<int>("CongregationId");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<bool>("IsAnointed");

                    b.Property<bool>("IsElder");

                    b.Property<bool>("IsInactive");

                    b.Property<bool>("IsMinisterialServant");

                    b.Property<bool>("Ispioneer");

                    b.Property<string>("SimpleAddress");

                    b.HasKey("Id");

                    b.HasIndex("CongregationId");

                    b.ToTable("Publisher");
                });

            modelBuilder.Entity("SecretaryWebMvc.Models.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CongregationId");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<bool?>("IsAdm");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.HasKey("Id");

                    b.HasIndex("CongregationId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("SecretaryWebMvc.Models.ActivitiesReport", b =>
                {
                    b.HasOne("SecretaryWebMvc.Models.Assistance", "Assistance")
                        .WithMany()
                        .HasForeignKey("AssistanceId");

                    b.HasOne("SecretaryWebMvc.Models.Publisher", "Publisher")
                        .WithMany("Activities")
                        .HasForeignKey("PublisherId");
                });

            modelBuilder.Entity("SecretaryWebMvc.Models.Assistance", b =>
                {
                    b.HasOne("SecretaryWebMvc.Models.Congregation", "Congregation")
                        .WithMany()
                        .HasForeignKey("CongregationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SecretaryWebMvc.Models.Publisher", b =>
                {
                    b.HasOne("SecretaryWebMvc.Models.Congregation", "Congregation")
                        .WithMany("Publishers")
                        .HasForeignKey("CongregationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SecretaryWebMvc.Models.Users", b =>
                {
                    b.HasOne("SecretaryWebMvc.Models.Congregation", "Congregation")
                        .WithMany()
                        .HasForeignKey("CongregationId");
                });
#pragma warning restore 612, 618
        }
    }
}
